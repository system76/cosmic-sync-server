[package]
name = "cosmic-sync-server"
version = "2.0.0"
edition = "2021"
authors = ["System76 <info@system76.com>"]
description = "High-performance synchronization server for System76's COSMIC Desktop Environment"
repository = "https://github.com/pop-os/cosmic-sync-server"
license = "GPL-3.0"
keywords = ["sync", "cosmic", "desktop", "system76", "grpc"]
categories = ["network-programming", "web-programming", "filesystem"]
readme = "README.md"
rust-version = "1.75"

[lib]
name = "cosmic_sync_server"
path = "src/lib.rs"

[[bin]]
name = "cosmic-sync-server"
path = "src/main.rs"

[dependencies]
# Async runtime with optimized features
tokio = { version = "1.35", features = [
    "rt-multi-thread",
    "macros", 
    "net",
    "time",
    "signal",
    "sync",
    "fs"
] }
tokio-stream = "0.1.14"
tokio-util = { version = "0.7", features = ["codec"] }
futures = "0.3.29"
futures-util = "0.3.29"

# gRPC and Protocol Buffers with performance features
tonic = { version = "0.10", features = ["tls", "gzip"] }
tonic-reflection = { version = "0.10", optional = true }
prost = "0.12"
prost-types = "0.12"
bytes = "1.5"

# HTTP server with performance optimizations
actix-web = { version = "4.4", features = ["compress-gzip", "rustls"] }
actix-cors = "0.6"

# Database with connection pooling and performance features
sqlx = { version = "0.7", features = [
    "runtime-tokio-rustls",
    "mysql", 
    "chrono",
    "uuid",
    "json",
    "migrate"
] }

# Caching (optional)
redis = { version = "0.24", features = ["tokio-comp", "connection-manager"], optional = true }

# Serialization and data handling
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Logging and tracing with performance features
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", features = ["env-filter", "json"] }
tracing-actix-web = "0.7"

# Error handling
thiserror = "1.0"
anyhow = "1.0"

# Configuration and environment
dotenv = "0.15"

# Utilities and crypto
uuid = { version = "1.6", features = ["v4", "serde"] }
chrono = { version = "0.4.31", features = ["serde"] }
rand = "0.8"
sha2 = "0.10"
hmac = "0.12"
aes-gcm = "0.10"
aes = "0.8"
md5 = "0.7"
base64 = "0.21"
hex = "0.4"

# Async trait support
async-trait = "0.1.74"

# HTTP client for OAuth with performance features
reqwest = { version = "0.11", features = ["json", "rustls-tls", "stream"], default-features = false }

# OAuth and authentication
oauth2 = "4.4"
jsonwebtoken = "9.2"

# Regular expressions and text processing
regex = "1.10"

# URL parsing
url = "2.5"

# System information
hostname = "0.3"
num_cpus = "1.16"

# AWS SDK for S3 storage and Secrets Manager
aws-config = { version = "1.5", features = ["behavior-version-latest"] }
aws-sdk-s3 = { version = "1.42" }
aws-sdk-secretsmanager = { version = "1.42" }
aws-types = { version = "1.3" }

# Data structures for performance
dashmap = "5.5"

once_cell = "1.19"
lapin = { version = "2.5", default-features = false, features = ["rustls"] }
nanoid = "0.4"

# Logging compatibility
log = "0.4"

# Development and testing dependencies
[dev-dependencies]
tempfile = "3.8"
tokio-test = "0.4"

# Build dependencies
[build-dependencies]
tonic-build = { version = "0.10", features = ["prost"] }

# Feature flags for conditional compilation
[features]
default = ["metrics", "compression"]

# Storage backends
s3-storage = []

# Caching layers
redis-cache = ["redis"]
in-memory-cache = []

# Development and debugging
reflection = ["tonic-reflection"]
metrics = []
compression = []
tracing = []

# Profile optimizations
[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
strip = true

[profile.dev]
opt-level = 0
debug = true
overflow-checks = true

# Workspace configuration for potential future modularization
[workspace]
members = [
    ".",
]

# Package metadata
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
